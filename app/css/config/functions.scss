// For media-queries
@function get-array-key($arr, $key) {
  @return nth(nth($arr, $key), 2); // Получаю значение ключа
}

@function get-array-value($arr, $key) {
  @return nth(nth($arr, $key), 1); // Получаю имя ключа
}

@function index-to-key($mapArray, $index-key) {
  $keys: map-keys($mapArray); // Список всех ключей в итерируемом массиве

  @return nth($keys, $index-key);
}

@function sqrt($r) {
  $x0: 1;
  $x1: $x0;

  @for $i from 1 through 10 {
    $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
    $x0: $x1;
  }

  @return $x1;
}

@function diagonal($diag) {
  @return floor(abs(sqrt(2) * $diag));
}

// For z-index
@function z($key) {
  @if map-has-key($z-layers, $key) {
    @return map-get($z-layers, $key);
  }

  @warn "Unknown `#{$key}` in $z-layers.";
  @return null;
}

// For fonts
@function px-to-rem($arg) {
  @return $arg / 16 + 'rem';
}

@function px-to-em($arg) {
  @return $arg / 16 + 'em';
}

/*
input: '10px', output: 10;
input: 10px, output: 10px
 */
@function to-number($value) {
  @if type-of($value) == 'number' {
    @return $value;
  } @else if type-of($value) != 'string' {
    @error 'Value for `to-number` should be a number or a string.';
  }

  $result: 0;
  $digits: 0;
  $minus: str-slice($value, 1, 1) == '-';
  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);

  @for $i from if($minus, 2, 1) through str-length($value) {
    $character: str-slice($value, $i, $i);

    @if (index(map-keys($numbers), $character) or $character == '.') {
      @if $character == '.' {
        $digits: 1;
      } @else if $digits == 0 {
        $result: $result * 10 + map-get($numbers, $character);
      } @else {
        $digits: $digits * 10;
        $result: $result + map-get($numbers, $character) / $digits;
      }
    }
  }

  @return if($minus, -$result, $result);
}
